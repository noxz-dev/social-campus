version: '3'
services:
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./network_db_data:/var/lib/postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  minio:
    image: minio/minio
    ports:
      - '9000:9000'
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: server /data
    depends_on:
      - backend
  backend:
    build: "./network_backend/"
    ports:
      - 3000:3000
    environment:
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH=${JWT_REFRESH}
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - postgres
  frontend:
    build: "./network_frontend/"
    ports:
      - 8080:8080
    depends_on:
      - postgres
  redis:
    image: redis:latest
    volumes:
      - './redis_data:/data'
    ports:
      - '6379:6379'
    command: ['redis-server', '--appendonly', 'yes']
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./demo_nginx:/etc/nginx/conf.d
    depends_on:
      - backend
      - minio
      - frontend
