version: '3'
services:
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./network_backend/network_db_data:/var/lib/postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
  minio:
    image: minio/minio
    ports:
      - '9000:9000'
    volumes:
      - ./network_backend/minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: server /data
    depends_on:
      - backend
    restart: always
  backend:
    build:
      context: ./network_backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: always
  frontend:
    build:
      context: ./network_frontend
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: always
  nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./network_backend/nginx:/etc/nginx/conf.d
      - ./network_backend/nginx/certbot/conf:/etc/letsencrypt
      - ./network_backend/nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - minio
      - frontend
    restart: always
  certbot:
    image: certbot/certbot
    volumes:
      - ./network_backend/nginx/certbot/conf:/etc/letsencrypt
      - ./network_backend/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
